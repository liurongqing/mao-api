name: 部署后台API

on:
  push:
    tags: # 当我们提交代码为tag 是以'v'开头的时候才会触发自动部署到服务端 如 git push tag v0.1.0
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    # 第一步 下载源码
    - uses: actions/checkout@master
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@master
      with:
        node-version: ${{ matrix.node-version }}

    # 第二步 安装、打包、压缩
    - name: Install dependencies # 安装依赖
      run: yarn --frozen-lockfile
    - name: build file # 编译生成 app.js
      run: yarn build --prod
    - name: build directory
      run: |
        mkdir directory
        cp dist/app.js package.json directory
      # 把app.js package.json等文件，打包压缩为release.tgz

    # 第三步 发布 release
    # - name: Create Release # 创建Release，可以在仓库查看到
    #   id: create_release
    #   uses: actions/create-release@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
    #   with:
    #     tag_name: ${{ github.ref }} # (tag)标签名称
    #     release_name: release/${{ github.ref }}
    #     draft: false # 是否是草稿
    #     prerelease: false # 是否是预发布

    # 第四步：上传构建结果到 Release（把打包的tgz上传到Release）
    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
    #     asset_path: ./release.tgz # 要上传文件
    #     asset_name: release.tgz # 上传后的文件名
    #     asset_content_type: application/x-tgz

    # 发文件到服务器
    - name: deploy file to server
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.KEY }}
      with:
        source: 'directory/*'
        target: "/home/liurongqing/api"
        strip_components: 1
        rm: true

    # 第五步：服务器上操作
    - name: Deploy
      uses: appleboy/ssh-action@master # 使用ssh链接服务器
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
          cd /home/liurongqing/api
          yarn install --production
          pm2 reload app.js
    env:
      CI: true
